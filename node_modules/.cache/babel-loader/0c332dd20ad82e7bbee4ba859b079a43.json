{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dror/WebProjects/react/BlockchainProjectFront/src/Block.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GridList from \"@material-ui/core/GridList\";\nimport { GridListTile } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  gridRoot: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridTitle: {\n    color: theme.palette.primary.light\n  }\n}));\nexport default function Block(props) {\n  _s();\n\n  const classes = useStyles();\n  const blocks = props.getBlocksHandler();\n  console.log(blocks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.gridRoot,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      className: classes.gridList,\n      cols: 2.5,\n      children: blocks.map((block, index) => {\n        return /*#__PURE__*/_jsxDEV(GridListTile, {\n          style: {\n            height: \"340px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"h2\",\n                children: index === 0 ? \"Genesis Block\" : \"Block \" + index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Hash of this block\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.title,\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: block.hash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Hash of previous block\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.title,\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: block.previousHash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.title,\n                children: \"Nonce\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.pos,\n                color: \"textSecondary\",\n                children: block.nonce\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.title,\n                children: \"Time stamp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.pos,\n                color: \"textSecondary\",\n                children: block.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                children: \"Learn More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Block, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Block;\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"sources":["/home/dror/WebProjects/react/BlockchainProjectFront/src/Block.js"],"names":["React","makeStyles","Divider","Card","CardActions","CardContent","Button","Typography","GridList","GridListTile","useStyles","theme","root","minWidth","title","fontSize","pos","marginBottom","gridRoot","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridTitle","color","primary","light","Block","props","classes","blocks","getBlocksHandler","console","log","gridList","map","block","index","height","hash","previousHash","nonce","timestamp"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GridList from \"@material-ui/core/GridList\";\nimport { GridListTile } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  gridRoot: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridTitle: {\n    color: theme.palette.primary.light,\n  },\n}));\n\nexport default function Block(props) {\n  const classes = useStyles();\n  const blocks = props.getBlocksHandler();\n  console.log(blocks);\n  return (\n    <div className={classes.gridRoot}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {blocks.map((block, index) => {\n          return (\n            <GridListTile style={{ height: \"340px\" }}>\n              <Card className={classes.root} variant=\"outlined\">\n                <CardContent>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    {index === 0 ? \"Genesis Block\" : \"Block \" + index}\n                  </Typography>\n                  <Divider />\n                  <Typography>Hash of this block</Typography>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                  >\n                    {block.hash}\n                  </Typography>\n                  <Typography>Hash of previous block</Typography>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                  >\n                    {block.previousHash}\n                  </Typography>\n                  <Divider />\n                  <Typography className={classes.title}>Nonce</Typography>\n                  <Typography className={classes.pos} color=\"textSecondary\">\n                    {block.nonce}\n                  </Typography>\n                  <Divider />\n                  <Typography className={classes.title}>Time stamp</Typography>\n                  <Typography className={classes.pos} color=\"textSecondary\">\n                    {block.timestamp}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\">Learn More</Button>\n                </CardActions>\n              </Card>\n            </GridListTile>\n          );\n        })}\n      </GridList>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}