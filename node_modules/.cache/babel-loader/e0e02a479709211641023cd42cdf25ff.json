{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dror/WebProjects/react/BlockchainProjectFront/src/BlockchainService.js\";\nimport React from \"react\";\nimport BlockGrid from \"./BlockGrid\";\nimport BlockContentTable from \"./BlockContentTable\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst {\n  Blockchain\n} = require(\"savjeecoin\");\n\nclass BlockchainService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.blockchainInstance = new Blockchain();\n    this.state = {\n      selectedBlockId: null,\n      difficulty: 1\n    };\n\n    this.handleClick = blockId => {\n      console.log(blockId);\n      this.setState({\n        selectedBlockId: blockId\n      });\n    };\n\n    this.blockchainInstance.difficulty = 1;\n    this.blockchainInstance.minePendingTransactions(\"my-wallet-address\");\n    this.getBlocks = this.getBlocks.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  getBlocks() {\n    return this.blockchainInstance.chain;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BlockGrid, {\n        onChange: this.handleClick,\n        getBlocksHandler: this.getBlocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Transaction inside Block temp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlockContentTable, {\n        blocks: this.getBlocks,\n        blockId: this.state.selectedBlockId || 1 // status={user.id === this.state.selectedBlockId ? true : false}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BlockchainService;","map":{"version":3,"sources":["/home/dror/WebProjects/react/BlockchainProjectFront/src/BlockchainService.js"],"names":["React","BlockGrid","BlockContentTable","Divider","Blockchain","require","BlockchainService","Component","constructor","props","blockchainInstance","state","selectedBlockId","difficulty","handleClick","blockId","console","log","setState","minePendingTransactions","getBlocks","bind","chain","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAiBC,OAAO,CAAC,YAAD,CAA9B;;AAEA,MAAMC,iBAAN,SAAgCN,KAAK,CAACO,SAAtC,CAAgD;AAG9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,kBAEmB,GAFE,IAAIN,UAAJ,EAEF;AAAA,SASnBO,KATmB,GASX;AACNC,MAAAA,eAAe,EAAE,IADX;AAENC,MAAAA,UAAU,EAAE;AAFN,KATW;;AAAA,SAcnBC,WAdmB,GAcJC,OAAD,IAAa;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKG,QAAL,CAAc;AAAEN,QAAAA,eAAe,EAAEG;AAAnB,OAAd;AACD,KAjBkB;;AAEjB,SAAKL,kBAAL,CAAwBG,UAAxB,GAAqC,CAArC;AACA,SAAKH,kBAAL,CAAwBS,uBAAxB,CAAgD,mBAAhD;AAEA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKP,WAAL,GAAmB,KAAKA,WAAL,CAAiBO,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAYDD,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKV,kBAAL,CAAwBY,KAA/B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,QAAQ,EAAE,KAAKT,WADjB;AAEE,QAAA,gBAAgB,EAAE,KAAKM;AAFzB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,iBAAD;AACE,QAAA,MAAM,EAAE,KAAKA,SADf;AAEE,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWC,eAAX,IAA8B,CAFzC,CAGE;;AAHF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA1C6C;;AA6ChD,eAAeN,iBAAf","sourcesContent":["import React from \"react\";\nimport BlockGrid from \"./BlockGrid\";\nimport BlockContentTable from \"./BlockContentTable\";\nimport Divider from \"@material-ui/core/Divider\";\nconst { Blockchain } = require(\"savjeecoin\");\n\nclass BlockchainService extends React.Component {\n  blockchainInstance = new Blockchain();\n\n  constructor(props) {\n    super(props);\n    this.blockchainInstance.difficulty = 1;\n    this.blockchainInstance.minePendingTransactions(\"my-wallet-address\");\n\n    this.getBlocks = this.getBlocks.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  state = {\n    selectedBlockId: null,\n    difficulty: 1,\n  };\n\n  handleClick = (blockId) => {\n    console.log(blockId);\n    this.setState({ selectedBlockId: blockId });\n  };\n\n  getBlocks() {\n    return this.blockchainInstance.chain;\n  }\n\n  render() {\n    return (\n      <div>\n        <BlockGrid\n          onChange={this.handleClick}\n          getBlocksHandler={this.getBlocks}\n        />\n        <Divider />\n        <h1>Transaction inside Block temp</h1>\n        <BlockContentTable\n          blocks={this.getBlocks}\n          blockId={this.state.selectedBlockId || 1}\n          // status={user.id === this.state.selectedBlockId ? true : false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BlockchainService;\n"]},"metadata":{},"sourceType":"module"}