{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dror/WebProjects/react/BlockchainProjectFront/src/BlockContentTable.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [// {\n//   id: \"id\",\n//   label: \"#\",\n//   minWidth: 30,\n//   format: (value) => value.toLocaleString(\"en-US\"),\n// },\n{\n  id: \"fromAddress\",\n  label: \"From\",\n  minWidth: 300,\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"toAddress\",\n  label: \"To\",\n  minWidth: 300,\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"amount\",\n  label: \"Amount\",\n  minWidth: 60,\n  align: \"right\",\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"timestamp\",\n  label: \"Timestamp\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toLocaleString(\"en-US\")\n}]; // function createData(from, to, amount, timestamp) {\n//   // function createData(id, from, to, amount, timestamp) {\n//   // return { id, from, to, amount, timestamp };\n//   return { from, to, amount, timestamp };\n// }\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  },\n  blockCell: {\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\"\n  }\n});\nexport default function BlockContentTable(props) {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const blocks = props.blocks();\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: blocks[props.blockId].transactions.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  className: classes.blockCell,\n                  children: column.format && typeof value === \"number\" ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: blocks[props.blockId].transactions.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlockContentTable, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = BlockContentTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockContentTable\");","map":{"version":3,"sources":["/home/dror/WebProjects/react/BlockchainProjectFront/src/BlockContentTable.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","format","value","toLocaleString","align","useStyles","root","width","container","maxHeight","blockCell","flexWrap","justifyContent","overflow","BlockContentTable","props","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","blocks","map","column","blockId","transactions","slice","row","index","code","length"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst columns = [\n  // {\n  //   id: \"id\",\n  //   label: \"#\",\n  //   minWidth: 30,\n  //   format: (value) => value.toLocaleString(\"en-US\"),\n  // },\n  {\n    id: \"fromAddress\",\n    label: \"From\",\n    minWidth: 300,\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"toAddress\",\n    label: \"To\",\n    minWidth: 300,\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"amount\",\n    label: \"Amount\",\n    minWidth: 60,\n    align: \"right\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"timestamp\",\n    label: \"Timestamp\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n];\n\n// function createData(from, to, amount, timestamp) {\n//   // function createData(id, from, to, amount, timestamp) {\n//   // return { id, from, to, amount, timestamp };\n//   return { from, to, amount, timestamp };\n// }\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n\n  blockCell: {\n    flexWrap: \"nowrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n  },\n});\n\nexport default function BlockContentTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const blocks = props.blocks();\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {blocks[props.blockId].transactions\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell\n                          key={column.id}\n                          align={column.align}\n                          className={classes.blockCell}\n                        >\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={blocks[props.blockId].transactions.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}