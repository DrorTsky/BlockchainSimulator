{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dror/WebProjects/react/BlockchainProjectFront/src/BlockGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Block from \"./Block\";\nimport GridList from \"@material-ui/core/GridList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GridListTile } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\"\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n  }\n}));\nexport default function BlockGrid(props) {\n  _s();\n\n  const classes = useStyles();\n  const blocks = props.getBlocksHandler();\n  console.log(blocks);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(GridList, {\n        className: classes.gridList,\n        cols: 2.5,\n        children: blocks.map((block, index) => /*#__PURE__*/_jsxDEV(GridListTile, {\n          style: {\n            minHeight: \"340px\",\n            width: \"500px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Block, {\n            block: block,\n            index: index,\n            handleClick: props.getBlocksHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlockGrid, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BlockGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockGrid\");","map":{"version":3,"sources":["/home/dror/WebProjects/react/BlockchainProjectFront/src/BlockGrid.js"],"names":["React","Block","GridList","makeStyles","GridListTile","Container","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","BlockGrid","props","classes","blocks","getBlocksHandler","console","log","map","block","index","minHeight","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,GADiC;AAQvCC,EAAAA,QAAQ,EAAE;AACRP,IAAAA,QAAQ,EAAE,QADF;AAER;AACAQ,IAAAA,SAAS,EAAE;AAHH,GAR6B;AAavCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEb,KAAK,CAACO,OAAN,CAAcO,OAAd,CAAsBC;AADxB,GAbgC;AAgBvCC,EAAAA,QAAQ,EAAE;AACRR,IAAAA,UAAU,EACR;AAFM;AAhB6B,CAAZ,CAAD,CAA5B;AAsBA,eAAe,SAASS,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAMqB,MAAM,GAAGF,KAAK,CAACG,gBAAN,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAED,OAAO,CAAClB,IAAxB;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEkB,OAAO,CAACT,QAA7B;AAAuC,QAAA,IAAI,EAAE,GAA7C;AAAA,kBACGU,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV,QAAC,YAAD;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE,OAAb;AAAsBC,YAAAA,KAAK,EAAE;AAA7B,WAFT;AAAA,iCAIE,QAAC,KAAD;AACE,YAAA,KAAK,EAAEH,KADT;AAEE,YAAA,KAAK,EAAEC,KAFT;AAGE,YAAA,WAAW,EAAER,KAAK,CAACG;AAHrB;AAAA;AAAA;AAAA;AAAA;AAJF,WACOK,KADP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAxBuBT,S;UACNlB,S;;;KADMkB,S","sourcesContent":["import React from \"react\";\nimport Block from \"./Block\";\n\nimport GridList from \"@material-ui/core/GridList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GridListTile } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\",\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n}));\n\nexport default function BlockGrid(props) {\n  const classes = useStyles();\n  const blocks = props.getBlocksHandler();\n  console.log(blocks);\n  return (\n    <Container maxWidth=\"md\">\n      <div className={classes.root}>\n        <GridList className={classes.gridList} cols={2.5}>\n          {blocks.map((block, index) => (\n            <GridListTile\n              key={index}\n              style={{ minHeight: \"340px\", width: \"500px\" }}\n            >\n              <Block\n                block={block}\n                index={index}\n                handleClick={props.getBlocksHandler}\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}