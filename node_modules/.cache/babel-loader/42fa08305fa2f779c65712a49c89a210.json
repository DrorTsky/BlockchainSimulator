{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dror/WebProjects/react/BlockchainProjectFront/src/BlockchainService.js\";\nimport React from \"react\";\nimport BlockGrid from \"./BlockGrid\";\nimport BlockContentTable from \"./BlockContentTable\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst {\n  Blockchain\n} = require(\"savjeecoin\");\n\nclass BlockchainService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.blockchainInstance = new Blockchain();\n    this.blockchainInstance.difficulty = 1;\n    this.blockchainInstance.minePendingTransactions(\"my-wallet-address\");\n    this.getBlocks = this.getBlocks.bind(this);\n  }\n\n  getBlocks() {\n    return this.blockchainInstance.chain;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BlockGrid, {\n        getBlocksHandler: this.getBlocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Transaction inside Block temp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlockContentTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BlockchainService;","map":{"version":3,"sources":["/home/dror/WebProjects/react/BlockchainProjectFront/src/BlockchainService.js"],"names":["React","BlockGrid","BlockContentTable","Divider","Blockchain","require","BlockchainService","Component","constructor","props","blockchainInstance","difficulty","minePendingTransactions","getBlocks","bind","chain","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAiBC,OAAO,CAAC,YAAD,CAA9B;;AAEA,MAAMC,iBAAN,SAAgCN,KAAK,CAACO,SAAtC,CAAgD;AAG9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,kBAEmB,GAFE,IAAIN,UAAJ,EAEF;AAEjB,SAAKM,kBAAL,CAAwBC,UAAxB,GAAqC,CAArC;AACA,SAAKD,kBAAL,CAAwBE,uBAAxB,CAAgD,mBAAhD;AAEA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKH,kBAAL,CAAwBK,KAA/B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAE,KAAKH;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAxB6C;;AA2BhD,eAAeP,iBAAf","sourcesContent":["import React from \"react\";\nimport BlockGrid from \"./BlockGrid\";\nimport BlockContentTable from \"./BlockContentTable\";\nimport Divider from \"@material-ui/core/Divider\";\nconst { Blockchain } = require(\"savjeecoin\");\n\nclass BlockchainService extends React.Component {\n  blockchainInstance = new Blockchain();\n\n  constructor(props) {\n    super(props);\n    this.blockchainInstance.difficulty = 1;\n    this.blockchainInstance.minePendingTransactions(\"my-wallet-address\");\n\n    this.getBlocks = this.getBlocks.bind(this);\n  }\n\n  getBlocks() {\n    return this.blockchainInstance.chain;\n  }\n\n  render() {\n    return (\n      <div>\n        <BlockGrid getBlocksHandler={this.getBlocks} />\n        <Divider />\n        <h1>Transaction inside Block temp</h1>\n        <BlockContentTable />\n      </div>\n    );\n  }\n}\n\nexport default BlockchainService;\n"]},"metadata":{},"sourceType":"module"}